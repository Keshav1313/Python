import re
print("\n".join(i for i in re.split('[,.]', input()) if len(i)>0))

#output= 100,000,000.000
100
000
000
000


m = re.match(r'(?P<user>\w+)@(?P<website>\w+)\.(?P<extension>\w+)','keshav@hackerrank.com')
m.groupdict()

#output={'user': 'keshav', 'website': 'hackerrank', 'extension': 'com'}


A0 = dict(zip(('a','b','c','d','e'),(1,2,3,4,5)))
A1 = range(10)
A2 = sorted([i for i in A1 if i in A0])
A3 = sorted([A0[s] for s in A0])
print(A0)
print(A3)
for s in A0:
    x=A0[s]
print(x)


{'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}
[1, 2, 3, 4, 5]
5


#shallow copy
import copy
list1=[1,2,3,4,5]
list2=copy.copy(list1)


list1.append('d')
print(list1)
print(list2)

[1, 2, 3, 4, 5, 'd']
[1, 2, 3, 4, 5]


#Deep Copy
import copy
list1=[[1,2],3,4,5]
list2=copy.deepcopy(list1)
list2[0][1]='a'
print(list2)
print(list1)

[[1, 'a'], 3, 4, 5]
[[1, 2], 3, 4, 5]


Important functions of re module:
1. match()
2. fullmatch()
3. search()
4.findall()
5.finditer()
6. sub()
7.subn()
8. split()
9. compile()

#match()
import re
def match_at_start(s,target):
    m=re.match(s,target)
    if m!=None:
        print('Match is available at the start of the string.')
        print(f'start index : {m.start()}, and end index : {m.end()}')
    else:
        print('MAtch is not available at start of the string.')
        
        
match_at_start('hello','hello this is AI world.')
print('------------------------------------------------')
match_at_start('k','keshav')
print('------------------------------------------------')
match_at_start('k','chandan')

OuPUT:
Match is available at the start of the string.
start index : 0, and end index : 5
------------------------------------------------
Match is available at the start of the string.
start index : 0, and end index : 1
------------------------------------------------
MAtch is not available at start of the string.


#FULLMATCH
import re
def fullmatch_string(s,target):
    m=re.fullmatch(s,target)
    if m!=None:
        print('There is full match of the sting in target.')
    else:
        print('There is no full match')
        
fullmatch_string('python','Learning python is love')
fullmatch_string('abab','abab')

OUTPUT:

There is no full match
There is full match of the sting in target.

#search

import re
def search_string(s,target):
    m=re.search(s,target)
    if m!=None:
        print('match is available :')
        print(f'First occurence of the match index : {m.start()} and end index : {m.end()}')
    else:
        print('Match is not available')
        
search_string('ab','abaaabc')
search_string('ab','cdefaab')

OUtput:
match is available :
First occurence of the match index : 0 and end index : 2
match is available :
First occurence of the match index : 5 and end index : 7


#findall
import re
def findall_func(s,target):
    m=re.findall(s,target)
    output=''.join(m)
    print(output)
    
    
findall_func('python','i love to learn python')


output:
python



#finditer (start(), end(), group())

import re
def finditer_func(s,target):
    matcher=re.finditer(s,target)
    for match in matcher:
        print(f'The starting match index : {match.start()} ending index : {match.end()} matched string : {match.group()}')
              
finditer_func('ab','cdabaaab')

OUTPUT:
The starting match index : 2 ending index : 4 matched string : ab
The starting match index : 6 ending index : 8 matched string : ab


